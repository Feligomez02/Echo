/**
 * Script para ejecutar ambos scrapers (La Estaci√≥n y La F√°brica)
 * y guardar los eventos reales en la base de datos
 */

import { scrapeEstacion, saveEstacionShows } from '../services/scraper-estacion';
import { scrapeFabrica, saveFabricaShows } from '../services/scraper-fabrica';

async function main() {
  try {
    console.log('üé≠ INICIANDO SCRAPING DE EVENTOS REALES\n');
    console.log('‚ïê'.repeat(60));

    // Scrape La Estaci√≥n
    console.log('\n1Ô∏è‚É£  Scrapeando La Estaci√≥n...\n');
    let estacionShows = await scrapeEstacion();
    console.log(`‚úÖ Extra√≠dos ${estacionShows.length} shows de La Estaci√≥n\n`);

    let estacionStats = await saveEstacionShows(estacionShows);
    console.log(`\n‚úÖ Guardados: ${estacionStats.created} nuevos, ${estacionStats.updated} actualizados\n`);

    // Scrape La F√°brica
    console.log('\n2Ô∏è‚É£  Scrapeando La F√°brica...\n');
    let fabricaShows = await scrapeFabrica();
    console.log(`‚úÖ Extra√≠dos ${fabricaShows.length} shows de La F√°brica\n`);

    let fabricaStats = await saveFabricaShows(fabricaShows);
    console.log(`\n‚úÖ Guardados: ${fabricaStats.created} nuevos, ${fabricaStats.updated} actualizados\n`);

    // Resumen final
    console.log('\n' + '‚ïê'.repeat(60));
    console.log('üìä RESUMEN FINAL DEL SCRAPING\n');
    console.log(`La Estaci√≥n: ${estacionStats.created} nuevos, ${estacionStats.updated} actualizados`);
    console.log(`La F√°brica:  ${fabricaStats.created} nuevos, ${fabricaStats.updated} actualizados`);
    console.log(`\n‚ú® Total nuevo: ${estacionStats.created + fabricaStats.created} eventos`);
    console.log(`üîÑ Total actualizado: ${estacionStats.updated + fabricaStats.updated} eventos`);
    console.log('‚ïê'.repeat(60) + '\n');

  } catch (error) {
    console.error('‚ùå Error en el scraping:', error);
    process.exit(1);
  }
}

main();
